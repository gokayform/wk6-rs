// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from webkit-gir-files
// DO NOT EDIT

use crate::ffi;
use glib::{bitflags::bitflags, translate::*};

bitflags! {
    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
    #[doc(alias = "WebKitHitTestResultContext")]
    pub struct HitTestResultContext: u32 {
        #[doc(alias = "WEBKIT_HIT_TEST_RESULT_CONTEXT_DOCUMENT")]
        const DOCUMENT = ffi::WEBKIT_HIT_TEST_RESULT_CONTEXT_DOCUMENT as _;
        #[doc(alias = "WEBKIT_HIT_TEST_RESULT_CONTEXT_LINK")]
        const LINK = ffi::WEBKIT_HIT_TEST_RESULT_CONTEXT_LINK as _;
        #[doc(alias = "WEBKIT_HIT_TEST_RESULT_CONTEXT_IMAGE")]
        const IMAGE = ffi::WEBKIT_HIT_TEST_RESULT_CONTEXT_IMAGE as _;
        #[doc(alias = "WEBKIT_HIT_TEST_RESULT_CONTEXT_MEDIA")]
        const MEDIA = ffi::WEBKIT_HIT_TEST_RESULT_CONTEXT_MEDIA as _;
        #[doc(alias = "WEBKIT_HIT_TEST_RESULT_CONTEXT_EDITABLE")]
        const EDITABLE = ffi::WEBKIT_HIT_TEST_RESULT_CONTEXT_EDITABLE as _;
        #[doc(alias = "WEBKIT_HIT_TEST_RESULT_CONTEXT_SCROLLBAR")]
        const SCROLLBAR = ffi::WEBKIT_HIT_TEST_RESULT_CONTEXT_SCROLLBAR as _;
        #[doc(alias = "WEBKIT_HIT_TEST_RESULT_CONTEXT_SELECTION")]
        const SELECTION = ffi::WEBKIT_HIT_TEST_RESULT_CONTEXT_SELECTION as _;
    }
}

#[doc(hidden)]
impl IntoGlib for HitTestResultContext {
    type GlibType = ffi::WebKitHitTestResultContext;

    #[inline]
    fn into_glib(self) -> ffi::WebKitHitTestResultContext {
        self.bits()
    }
}

#[doc(hidden)]
impl FromGlib<ffi::WebKitHitTestResultContext> for HitTestResultContext {
    #[inline]
    unsafe fn from_glib(value: ffi::WebKitHitTestResultContext) -> Self {
        skip_assert_initialized!();
        Self::from_bits_truncate(value)
    }
}
